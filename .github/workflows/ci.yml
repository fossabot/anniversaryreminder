---
# SPDX-FileCopyrightText: ¬© 2016-2023 J√ºrgen M√ºlbert
#
# SPDX-License-Identifier: EUPL-1.2
#

name: CI

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - global.json
      - AnniversaryReminder.sln
      - .github/workflows/ci.yml

  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: 1
  DOTNET_SDK_VERSION: 7.0.x
  NET_CORE_VERSION: net7.0
  NET_FRAMEWORK_VERSION: net48
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    name: "üßä Module Build"
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: "üß∞ Checkout Source Code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "‚öôÔ∏è Execute GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2

      - name: "‚öô Display the version"
        run: |
          echo "Version: ${{ steps.gitversion.outputs.semVer }}"

      - name: "‚öôÔ∏è Setup dotnet"
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Cache NuGet packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: "üöß Install dependencies and Build"
        run: |
          dotnet --info
          dotnet restore
          dotnet tool update --global dotnet-ef
          dotnet ef database update --project src/AnniversaryReminder
          dotnet build  -p:Configuration=Release --no-restore -p:version=${{ steps.gitversion.outputs.semVer }}

      - name: "üì§ Upload artifact: Application"
        uses: actions/upload-artifact@v3
        with:
          name: DotnetSolution
          path: ${{github.workspace}}/dist

  source-archive:
    name: All Source Files
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: "üß∞ Checkout Source Code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Restoring submodules
        run: git submodule update --init

      - name: "‚öôÔ∏è Execute GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2

      - name: "‚öô Display the version"
        run: |
          echo "Version: ${{ steps.gitversion.outputs.semVer }}"

      - name: Create 7z source-archive
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./
          pathTarget: ./anniversary-reminder-${{ steps.gitversion.outputs.semVer }}-source-all.7z

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-files
          path: ./anniversary-reminder-${{ steps.gitversion.outputs.semVer }}-source-all.7z

  tests:
    name: "${{ matrix.os }} with dotnet-version: ${{ matrix.dotnet-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { dotnet-version: "7.x", os: ubuntu-latest }
          - { dotnet-version: "7.x", os: windows-latest }
          - { dotnet-version: "7.x", os: macos-latest }
          - { dotnet-version: "6.x", os: ubuntu-latest }
          - { dotnet-version: "6.x", os: windows-latest }
          - { dotnet-version: "6.x", os: macos-latest }

    steps:
      - name: "üß∞ Checkout Source Code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "‚öôÔ∏è Execute GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2

      - name: "‚öô Display the version"
        run: |
          echo "Version: ${{ steps.gitversion.outputs.semVer }}"

      - name: "‚öôÔ∏è Setup dotnet"
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: "‚öôÔ∏è Check dotnet sdk install & restore"
        run: |
          dotnet --info
          dotnet restore
          dotnet tool update --global dotnet-ef

      - name: Unit & integration test
        run: |
          dotnet ef database update --project src/AnniversaryReminder
          dotnet test -p:Configuration=Release --no-restore -p:version=${{ steps.gitversion.outputs.semVer }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  deployPrereleases:
    name: Deploy Pre-Release
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: PreRelease
    needs:
      - build
      - tests

    steps:
      - name: Restore Dotnet Solution
        uses: actions/download-artifact@v3
        with:
          name: DotnetSolution
          path: dist

      - name: Upload Artifact to Pre-Release
        uses: actions/upload-artifact@v3
        with:
          name: Pre-Release Solution
          path: dist

  deploy:
    name: Deploy Release on nuget
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: Release
    needs:
      - build
      - tests

    steps:
      - name: Restore Dotnet Solution
        uses: actions/download-artifact@v3
        with:
          name: DotnetSolution
          path: dist/

      - name: Collect Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuget-packages
          path: "**/*.nupkg"

        # - name: Publish the package to NuGet.Org
        #  run: dotnet nuget push "**/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.PUBLISH_NUGET_ORG }} --skip-duplicate
